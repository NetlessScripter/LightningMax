local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local Debris = game:GetService("Debris")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local PrimaryPart = Character:WaitForChild("HumanoidRootPart")

local lib = require(ReplicatedStorage.library)
local PlayAttachment = lib.PlayAttachment
local Maid = lib.Maid
local PlayTween = lib.PlayTween
local dtwait = lib.dtwait
local PlayMesh = lib.PlayMesh
local Able = lib.Able
local LifeScale = lib.LifeScale
local QuickFX = lib.QuickFX

local vfxFolder = ReplicatedStorage.Resources.UFW.vfx
local ufw = ReplicatedStorage.Resources.UFW
local thrownFolder = workspace.Thrown

local PunchEffect = {}
PunchEffect.__index = PunchEffect

local self = setmetatable({}, PunchEffect)
self._maid = Maid.new()

local cleaning = false
local function Clean()
	if not cleaning then
		cleaning = true
		self._maid:doCleaning()
	end
end

task.delay(10, Clean)

local function PlayTextures(model, duration)
	local textures = {}
	for _, tex in ipairs(model:GetDescendants()) do
		if tex:IsA("Texture") then
			table.insert(textures, tex)
			TweenService:Create(tex, TweenInfo.new(duration, Enum.EasingStyle.Sine), {
				Transparency = 1
			}):Play()
		end
	end
	return textures
end

local function StartPunchFX()
	local chargeFX = QuickFX({
		FX = vfxFolder.PunchFX.Charge,
		Maid = self._maid,
		Anchor = PrimaryPart.CFrame * CFrame.new(0, 0, -3)
	})
	chargeFX:ScaleTo(3)
	Able({ FX = chargeFX, On = true })

	for _, emit in ipairs(chargeFX:GetDescendants()) do
		if emit:IsA("ParticleEmitter") then
			emit.Rate *= 5
		end
	end

	Debris:AddItem(chargeFX, 0.15)

	local enabledPunch = QuickFX({
		FX = vfxFolder.PunchFX.EnabledPunch,
		Maid = self._maid,
		Anchor = PrimaryPart.CFrame * CFrame.new(0, 0, -60)
	})
	enabledPunch:ScaleTo(4)
	Able({ FX = enabledPunch, On = true })

	task.delay(0.25, function()
		Able({ FX = enabledPunch, On = false })
	end)

	local flashMesh = vfxFolder.PunchFX.Flash:Clone()
	flashMesh:ScaleTo(4)
	PlayMesh({
		Model = flashMesh,
		Anchor = PrimaryPart.CFrame * CFrame.new(0, 0, 40),
		Info = TweenInfo.new(0.5, Enum.EasingStyle.Exponential)
	})
	PlayTextures(flashMesh, 0.5)
	Debris:AddItem(flashMesh, 0.15)
end

local function MainPunchEffects()
	local shard = self._maid:give(vfxFolder.PunchFX.Shard:Clone())
	shard:ScaleTo(2)
	PlayMesh({
		Model = shard,
		T = 0,
		EndT = 0,
		Anchor = PrimaryPart.CFrame * CFrame.new(0, 0, -66) * CFrame.Angles(0, math.pi / 2, 0),
		Info = TweenInfo.new(0.1, Enum.EasingStyle.Exponential)
	})

	local anchorCF = PrimaryPart.CFrame * CFrame.new(0, 0, -10) * CFrame.Angles(math.pi / 2, 0, 0)
	local startThing = self._maid:give(vfxFolder.PunchFX.StartThing:Clone())
	startThing:PivotTo(anchorCF)
	startThing.Parent = thrownFolder
	Debris:AddItem(startThing, 2)

	local endThing = self._maid:give(vfxFolder.PunchFX.EndThing:Clone())
	endThing:PivotTo(anchorCF)
	endThing.Parent = thrownFolder

	task.spawn(function()
		local impact1 = self._maid:give(ufw:FindFirstChild("1"):Clone())
		impact1.Parent = game.Lighting
		dtwait(0.07)
		impact1:Destroy()

		local impact2 = self._maid:give(ufw:FindFirstChild("2"):Clone())
		impact2.Parent = game.Lighting
		dtwait(0.07)
		impact2:Destroy()
	end)

	for _, child in ipairs(startThing:GetChildren()) do
		local match = endThing:FindFirstChild(child.Name)
		if match then
			TweenService:Create(child, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {
				Size = match.Size,
				CFrame = match.CFrame
			}):Play()
		end
	end

	Debris:AddItem(startThing, 0.05)

	local groundSmoke = QuickFX({
		FX = vfxFolder.PunchFX.groundsmoke,
		Anchor = PrimaryPart.CFrame * CFrame.new(0, -PrimaryPart.Size.Y * 1.5, 0) * CFrame.Angles(0, math.pi, 0),
		Maid = self._maid
	})
	PlayAttachment(groundSmoke)
	groundSmoke:ScaleTo(2)
	LifeScale({ FX = groundSmoke, Scale = 2 })
	LifeScale({ FX = groundSmoke.PrimaryPart.emitLeft, Scale = 0.2 })
	LifeScale({ FX = groundSmoke.PrimaryPart.emitRight, Scale = 0.2 })

	task.spawn(function()
		for i = 1, 3 do
			local wind = QuickFX({
				FX = vfxFolder.PunchFX.Wind,
				Anchor = PrimaryPart.CFrame * CFrame.new(0, -PrimaryPart.Size.Y * 1.5, 10),
				Maid = self._maid
			})
			wind:ScaleTo(i * 2)
			LifeScale({ FX = wind, Scale = 0.5 * (i * 0.8) })
			PlayAttachment(wind)
			dtwait(0.05)
		end
	end)
end

task.spawn(function()
	StartPunchFX()
	dtwait(0.15)
	MainPunchEffects()
end)

local rbClone = ReplicatedStorage.Resources.UFW.RB:Clone()
rbClone:SetPrimaryPartCFrame(PrimaryPart.CFrame * CFrame.new(0, 0, -4))
rbClone.Parent = thrownFolder
rbClone:ScaleTo(7)

local anim = rbClone.AnimationController:LoadAnimation(ufw.lastthing)
anim:Play()
anim.TimePosition = 1.4
Debris:AddItem(rbClone, 3)

task.delay(1, function()
	for _, part in ipairs(rbClone:GetChildren()) do
		if part:IsA("BasePart") then
			TweenService:Create(part, TweenInfo.new(0.5, Enum.EasingStyle.Sine), {
				Transparency = 1
			}):Play()
		end
	end
end)
